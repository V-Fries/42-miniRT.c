NAME =				libft.a
NAME_DEBUG =		libft_debug.a
NAME_TEST =			libft_test
NAME_TEST_DEBUG =	libft_test_debug


SRC_PATH =	src/
SRC =\
	bitmask/bitmask_free.c			\
	bitmask/bitmask_get_position.c	\
	bitmask/bitmask_get.c			\
	bitmask/bitmask_init.c			\
	bitmask/bitmask_set.c			\
\
\
	bools/reverse_bool.c	\
\
\
	char/isalnum.c		\
	char/isalpha.c		\
	char/isascii.c		\
	char/isdigit.c		\
	char/isprint.c		\
	char/isspace.c		\
	char/toupper.c		\
	char/tolower.c		\
	char/is_in_set.c	\
\
\
	hashmap/hm_add_elem.c		\
	hashmap/hm_delete_elem.c	\
	hashmap/hm_clear.c			\
	hashmap/hm_get_content.c	\
	hashmap/hm_get_elem.c		\
	hashmap/hm_get_index.c		\
	hashmap/hm_init.c			\
	hashmap/hm_size.c			\
\
\
	io/get_next_line/get_next_line_multi_fd.c		\
	io/get_next_line/get_next_line_utils_multi_fd.c	\
	io/get_next_line/get_next_line_utils.c			\
	io/get_next_line/get_next_line.c				\
\
	io/printf/printf.c			\
	io/printf/get_final_str.c	\
	io/printf/formating/format.c		\
	io/printf/formating/format_u_x.c	\
	\
	io/print_error.c			\
	io/print_position_in_code.c	\
	io/putchar_fd.c				\
	io/putendl_fd.c				\
	io/putnbr_fd.c				\
	io/putstr_fd.c				\
	io/putstr.c					\
	io/read_file.c				\
\
\
	linked_list/doubly_linked_void_ptr/dlst_get_next_free_current.c	\
	linked_list/doubly_linked_void_ptr/dlst_of_dlst_clear.c			\
	linked_list/doubly_linked_void_ptr/dlst_push.c					\
	linked_list/doubly_linked_void_ptr/dlst_reverse.c				\
	linked_list/doubly_linked_void_ptr/dlstadd_back.c				\
	linked_list/doubly_linked_void_ptr/dlstadd_front.c				\
	linked_list/doubly_linked_void_ptr/dlstclear.c					\
	linked_list/doubly_linked_void_ptr/dlstdelone.c					\
	linked_list/doubly_linked_void_ptr/dlstiter.c					\
	linked_list/doubly_linked_void_ptr/dlstlast.c					\
	linked_list/doubly_linked_void_ptr/dlstmap.c					\
	linked_list/doubly_linked_void_ptr/dlstnew.c					\
	linked_list/doubly_linked_void_ptr/dlstsize.c					\
\
	linked_list/int/lsti_add_back.c					\
	linked_list/int/lsti_add_front.c				\
	linked_list/int/lsti_clear.c					\
	linked_list/int/lsti_cmp.c						\
	linked_list/int/lsti_cpy.c						\
	linked_list/int/lsti_delone.c					\
	linked_list/int/lsti_get_next_free_current.c	\
	linked_list/int/lsti_iter.c						\
	linked_list/int/lsti_last.c						\
	linked_list/int/lsti_map.c						\
	linked_list/int/lsti_new.c						\
	linked_list/int/lsti_push.c						\
	linked_list/int/lsti_reverse.c					\
	linked_list/int/lsti_size.c						\
\
	linked_list/void_ptr/lst_get_next_free_current.c	\
	linked_list/void_ptr/lst_join_strs.c				\
	linked_list/void_ptr/lst_join_t_strings.c			\
	linked_list/void_ptr/lst_of_lst_clear.c				\
	linked_list/void_ptr/lst_push.c						\
	linked_list/void_ptr/lst_reverse.c					\
	linked_list/void_ptr/lst_sort.c						\
	linked_list/void_ptr/lstadd_back.c					\
	linked_list/void_ptr/lstadd_front.c					\
	linked_list/void_ptr/lstclear.c						\
	linked_list/void_ptr/lstdelone.c					\
	linked_list/void_ptr/lstiter.c						\
	linked_list/void_ptr/lstlast.c						\
	linked_list/void_ptr/lstmap.c						\
	linked_list/void_ptr/lstnew.c						\
	linked_list/void_ptr/lstsize.c						\
	linked_list/void_ptr/lst_remove_if.c				\
\
\
	math/angle_to_theta.c	\
\
\
	mem/bzero.c		\
	mem/calloc.c	\
	mem/memchr.c	\
	mem/memcmp.c	\
	mem/memcpy.c	\
	mem/memmove.c	\
	mem/memset.c	\
\
\
	numbers/max/maxf.c			\
\
	numbers/min/minf.c			\
\
	numbers/swap/swap_float.c	\
	numbers/swap/swap_int.c		\
	numbers/swap/swap_long.c	\
	numbers/swap/swap_size_t.c	\
	numbers/swap/swap_ssize_t.c	\
	numbers/swap/swap_uint.c	\
\
	numbers/abs.c				\
	numbers/atof.c				\
	numbers/atoi.c				\
	numbers/atoll.c				\
	numbers/get_smallest_int.c	\
	numbers/itoa.c				\
\
\
	string/split/free_split.c				\
	string/split/split_set.c				\
	string/split/split_len.c				\
	string/split/split.c					\
	string/split/split_unless_in_quotes.c	\
\
	string/join/join_strs.c		\
	string/join/strjoin.c		\
	string/join/strjoin_three.c	\
\
	string/is_number.c			\
	string/skip_char.c			\
	string/skip_set.c			\
	string/str_is_in_strs.c		\
	string/strchr.c				\
	string/strcmp.c				\
	string/strcmp_ignore_case.c	\
	string/strdup.c				\
	string/striteri.c			\
	string/strlcat.c			\
	string/strlcpy.c			\
	string/strlen.c				\
	string/strmapi.c			\
	string/strncmp.c			\
	string/strnstr.c			\
	string/strrstr.c			\
	string/strrchr.c			\
	string/strtrim.c			\
	string/substr.c				\
	string/t_string_free.c		\
\
\
	sort/msort_int.c				\
	sort/msort_str.c				\
	sort/msort_str_ignore_case.c	\
\
\
	time/get_current_time.c				\
	time/get_number_of_fps_in_string.c	\
\
\
	vector/vector_add_elem.c			\
	vector/vector_change_size.c			\
	vector/vector_convert_to_array.c	\
	vector/vector_create.c				\
	vector/vector_delete_elem.c			\
	vector/vector_destroy.c				\
	vector/vector_minimize_size.c


TEST_DIR = test/
SRCS_TEST =\
	$(LIBFT_INCLUDE)ft_bitmask.h.c		\
	$(LIBFT_INCLUDE)ft_bools.h.c		\
	$(LIBFT_INCLUDE)ft_char.h.c			\
	$(LIBFT_INCLUDE)ft_hashmap.h.c		\
	$(LIBFT_INCLUDE)ft_io.h.c			\
	$(LIBFT_INCLUDE)ft_linked_list.h.c	\
	$(LIBFT_INCLUDE)ft_math.h.c			\
	$(LIBFT_INCLUDE)ft_mem.h.c			\
	$(LIBFT_INCLUDE)ft_numbers.h.c		\
	$(LIBFT_INCLUDE)ft_sort.h.c			\
	$(LIBFT_INCLUDE)ft_string.h.c		\
	$(LIBFT_INCLUDE)libft.h.c			\
\
\
	$(SRC_PATH)hashmap/hashmap_test.c	\
\
	$(SRC_PATH)bitmask/bitmask_test.c	\
\
	$(SRC_PATH)string/join/join_strs_test.c	\
\
	$(SRC_PATH)linked_list/doubly_linked_void_ptr.c	\
\
\
	main.c


LIBFT_INCLUDE = include/
DIR_INCLUDES =\
	$(LIBFT_INCLUDE)
INCLUDES =	$(addprefix -I , $(DIR_INCLUDES))


DIR_BUILD =			.build/
TEST_BUILD_DIR =	$(DIR_BUILD)test/

OBJS =				$(addprefix $(DIR_BUILD),$(SRC:.c=.o))
DEPS =				$(addprefix $(DIR_BUILD),$(SRC:.c=.d))

OBJS_DEBUG =		$(addprefix $(DIR_BUILD),$(SRC:.c=_debug.o))
DEPS_DEBUG =		$(addprefix $(DIR_BUILD),$(SRC:.c=_debug.d))

OBJS_TEST =			$(addprefix $(TEST_BUILD_DIR),$(SRCS_TEST:.c=.o))
DEPS_TEST =			$(addprefix $(TEST_BUILD_DIR),$(SRCS_TEST:.c=.d))

OBJS_TEST_DEBUG =	$(addprefix $(TEST_BUILD_DIR),$(SRCS_TEST:.c=_debug.o))
DEPS_TEST_DEBUG =	$(addprefix $(TEST_BUILD_DIR),$(SRCS_TEST:.c=.debug.d))


DEPS_FLAGS =	-MMD -MP
FLAGS_NO_O3 =	-Wall -Wextra -Werror $(DEPS_FLAGS)

FLAGS =			$(FLAGS_NO_O3) -O3
DEBUG_FLAGS	=	$(FLAGS_NO_O3) -g3 -fsanitize=address


RM =	rm -f
MKDIR =	mkdir -p
AR =	ar rcs


#------------------------------------ all -------------------------------------#

.PHONY:		all
all:		$(NAME)

$(NAME):	$(OBJS)
			$(AR) $(NAME) $(OBJS)

-include $(DEPS)
$(DIR_BUILD)%.o:	$(SRC_PATH)%.c
			@$(MKDIR) $(shell dirname $@)
			$(CC) $(FLAGS) $(INCLUDES) -c $< -o $@

#---------------------------------- debug -------------------------------------#

.PHONY:		debug
debug:	$(NAME_DEBUG)

$(NAME_DEBUG):	$(OBJS_DEBUG)
			$(AR) $(NAME_DEBUG) $(OBJS_DEBUG)

-include $(DEPS_DEBUG)
$(DIR_BUILD)%_debug.o:	$(SRC_PATH)%.c
			@$(MKDIR) $(shell dirname $@)
			$(CC) $(DEBUG_FLAGS) $(INCLUDES) -c $< -o $@

#----------------------------------- test -------------------------------------#

.PHONY:		test
test:		$(NAME_TEST) $(NAME_TEST_DEBUG)
			@./$(NAME_TEST_DEBUG)
			@echo
			leaks -atExit -- ./$(NAME_TEST)


$(NAME_TEST):	$(OBJS_TEST) $(NAME)
			$(CC) $(FLAGS) $(INCLUDES) $(OBJS_TEST) \
				-L. -lft -o $(NAME_TEST)

-include $(DEPS_TEST)
$(TEST_BUILD_DIR)%.o:	$(TEST_DIR)%.c
			@$(MKDIR) $(shell dirname $@)
			$(CC) $(FLAGS) $(INCLUDES) -I test/header -c $< -o $@


$(NAME_TEST_DEBUG):	$(OBJS_TEST_DEBUG) $(NAME_DEBUG)
			$(CC) $(DEBUG_FLAGS) $(INCLUDES) $(OBJS_TEST_DEBUG) \
				-L. -lft -o $(NAME_TEST_DEBUG)

-include $(DEPS_TEST_DEBUG)
$(TEST_BUILD_DIR)%_debug.o:	$(TEST_DIR)%.c
			@$(MKDIR) $(shell dirname $@)
			$(CC) $(DEBUG_FLAGS) $(INCLUDES) -I test/header -c $< -o $@

#---------------------------------- other -------------------------------------#

.PHONY:		clean
clean:
			$(RM) -r $(DIR_BUILD)

.PHONY:		fclean
fclean:		clean
			$(RM) $(NAME) $(NAME_DEBUG) $(NAME_TEST) $(NAME_TEST_DEBUG)

.PHONY:		re
re:			fclean
			$(MAKE) all

.PHONY:		re_debug
re_debug:	fclean
			$(MAKE) debug
